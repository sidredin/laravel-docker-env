version: "3.8"

services:
  app:
    build:
      args:
        user: laravel
        uid: 1000
      context: .
      dockerfile: docker/app.dockerfile
    container_name: laravel-app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - .:/var/www/html:delegated
      - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    networks:
      - laravel-net

  nginx:
    image: nginx:1.17-alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - '${WEB_SERVER_PORT:-8080}:80'
    volumes:
      - .:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - laravel-net

  db:
    image: 'mysql:8.0'
    container_name: laravel-db
    restart: unless-stopped
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - 'laravel-mysql:/var/lib/mysql'
    networks:
      - laravel-net

  #  rabbitmq:
  #    image: rabbitmq:3.10.7-management
  #    container_name: laravel-queue
  #    hostname: rabbitmq
  #    restart: always
  #    environment:
  #      - RABBITMQ_DEFAULT_USER=rmuser
  #      - RABBITMQ_DEFAULT_PASS=rmpassword
  #      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
  #    volumes:
  #      - ./rabbitmq:/var/lib/rabbitmq
  #    healthcheck:
  #      test: rabbitmq-diagnostics -q ping
  #    ports:
  #      - '${FORWARD_RABBITMQ_DASHBOARD_PORT:-15672}:15672' # web ui
  #      - '${FORWARD_RABBITMQ_AMQP_PORT:-5672}:5672' # AMQP
  #    networks:
  #      - laravel-net

  redis:
    image: redis:7.0-rc2
    container_name: laravel-redis
    volumes:
      - 'laravel-redis:/data'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    networks:
      - laravel-net

  redisinsight:
    image: redislabs/redisinsight:1.11.1
    container_name: laravel-redisinsight
    depends_on:
      - redis
    ports:
      - '${FORWARD_REDISINSIGHT_PORT:-8001}:8001'
    networks:
      - laravel-net


  mailhog:
    image: mailhog/mailhog
    container_name: laravel-mailhog
    restart: unless-stopped
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025' # smtp server
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025' # web ui
    networks:
      - laravel-net

networks:
  laravel-net:
    driver: bridge

volumes:
  laravel-mysql:
    driver: local
  laravel-redis:
    driver: local
